<?php

namespace App\Http\Requests;

use Illuminate\Contracts\Validation\Validator;
use Illuminate\Foundation\Http\FormRequest;

class StoreHolidayDutyRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {
        return [
            'duty_date'     => 'required|date|after_or_equal:today',
            'holiday_type'  => 'required|in:public,weekend,festival',
            'reason'        => 'nullable|string|max:1000',
            // 'is_approved' => You may not allow users to set this from the form
        ];
    }

    public function messages(): array
    {
        return [
            'duty_date.required' => 'Duty date is required.',
            'duty_date.date' => 'Duty date must be a date.',
            'reason.required' => 'Reason is required.',
            'reason.string' => 'Reason is not a string.',
            'reason.max' => 'Reason is too long.',
            'holiday_type.required' => 'Holiday type is required.',
            'holiday_type.in' => 'Holiday type is not valid.',
        ];
    }
   protected function failedValidation(Validator $validator)
   {
       parent::failedValidation($validator); // TODO: Change the autogenerated stub
       //dd($validator->errors());
   }
}
